import opcua.context.Endpoint;
import org.bouncycastle.jce.provider.BouncyCastleProvider;
import org.bouncycastle.operator.OperatorCreationException;
import reporting.Report;
import transport.TransportException;
import vulntest.manger.MangerVulnerabilityTest;

import java.security.*;
import java.security.cert.CertificateException;

public class VulnerabilityAnalysis {

    public static Endpoint ENDPOINT_UA_JAVA = new Endpoint("localhost", 8666, "opc.tcp://localhost:8666/UAExample");
    public static Endpoint ENDPOINT_UA_NET = new Endpoint("localhost", 62541, "opc.tcp://desktop-n27ptvo:62541/Quickstarts/ReferenceServer");
    public static Endpoint ENDPOINT_UA_ANSIC = new Endpoint("192.168.56.101", 4840, "opc.tcp://localhost:4840");
    public static Endpoint ENDPOINT_MILO = new Endpoint("localhost", 12686, "opc.tcp://localhost:12686/milo");
    public static Endpoint ENDPOINT_OPCUA4J = new Endpoint("localhost", 6001, "opc.tcp://127.0.0.1:6001/sampleuaserver");
    public static Endpoint ENDPOINT_LIB_UA = new Endpoint("localhost", 7718, "opc.tcp://127.0.0.1:7718/");
    public static Endpoint ENDPOINT_NODE_OPCUA_SIMPLE = new Endpoint("localhost", 26543, "opc.tcp://DESKTOP-N27PTVO.fritz.box:26543");
    public static Endpoint ENDPOINT_NODE_OPCUA_DEMO = new Endpoint("localhost", 4334, "opc.tcp://DESKTOP-N27PTVO.fritz.box:4334/UA/MyLittleServer");
    public static Endpoint ENDPOINT_PYTHON_OPCUA = new Endpoint("localhost", 4840, "opc.tcp://0.0.0.0:4840/freeopcua/server/");
    public static Endpoint ENDPOINT_OPEN62541 = new Endpoint("192.168.56.101", 4840, "opc.tcp://jonas-VirtualBox:4840/");
    public static Endpoint ENDPOINT_FREE_OPCUA = new Endpoint("192.168.56.101", 4840, "opc.tcp://localhost:4840/freeopcua/server");
    public static Endpoint ENDPOINT_S2OPC = new Endpoint("192.168.56.101", 4841, "opc.tcp://localhost:4841");

    public static void main(String[] args) throws NoSuchAlgorithmException, CertificateException, OperatorCreationException, TransportException {
        Security.addProvider(new BouncyCastleProvider());

        MangerVulnerabilityTest vulnerabilityTest = new MangerVulnerabilityTest(false, 0);
        Report report = vulnerabilityTest.performTest(ENDPOINT_OPCUA4J);


        System.out.println(report);
    }

}